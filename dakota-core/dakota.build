# -*- mode: perl -*-
{
    'builddir' => 'build-dkt',
    'compiler-opts-file' => '../lib/dakota/compiler.opts',
    'srcs' => [ # cmd-line
      'bit-vector.dk',
      'boole.dk',
      'char.dk',
      'collection.dk',
      'compare.dk',
      'const-info.dk',
      'core.dk',
      'counted-set.dk',
      'dakota-core.dk',
      'deque.dk',
      'item-already-present-exception.dk',
      'enum-info.dk',
      'exception.dk',
      'hash.dk',
      'illegal-klass-exception.dk',
      'input-stream.dk',
      'int.dk',
      'iterator.dk',
      'keyword-exception.dk',
      'keyword.dk',
      'klass.dk',
      'method-alias.dk',
      'method.dk',
      'missing-keyword-exception.dk',
      'named-enum-info.dk',
      'named-info.dk',
      'no-such-keyword-exception.dk',
      'no-such-method-exception.dk',
      'no-such-slot-exception.dk',
      'number.dk',
      'object-input-stream.dk',
      'object-output-stream.dk',
      'object.dk',
      'output-stream.dk',
      'pair.dk',
      'property.dk',
      'ptr.dk',
      'result.dk',
      'selector-node.dk',
      'selector.dk',
      'sequence.dk',
      'set-of-pairs.dk',
      'set.dk',
      'signal-exception.dk',
      'signature.dk',
      'singleton-klass.dk',
      'size.dk',
      'sorted-counted-set.dk',
      'sorted-set-core.dk',
      'sorted-set.dk',
      'sorted-table.dk',
      'stack.dk',
      'std-compare.dk',
      'str.dk',
      'str128.dk',
      'str256.dk',
      'str32.dk',
      'str512.dk',
      'str64.dk',
      'stream.dk',
      'string.dk',
      'super.dk',
      'symbol.dk',
      'system-exception.dk',
      'table.dk',
      'trace.dk',
      'unbox-illegal-klass-exception.dk',
      'vector.dk',
    ],
    'lib-dirs' => [ # cmd-line
      '${INSTALL_PREFIX}/lib',
    ],
    'libs' => [ # cmd-line
      'dakota-dso',
    ],
    'include-dirs' => [ # cmd-line
      '${SOURCE_DIR}',
      '${SOURCE_DIR}/../include',
      '${INSTALL_PREFIX}/include',
    ],
    'macros' => [ # cmd-line
      #'DK_SRC_UNIQUE_HEADER=0',
      #'DK_INLINE_GENERIC_FUNCS=0',
      #'DK_INLINE_KLASS_FUNCS=0',
    ],
    'target' => 'dakota-core', # cmd-line
    'is-lib' => 1,
    'compatibility-version' => '1.0.0',                 # cmd-line
    'current-version' =>       '1.0.0',                 # cmd-line
    'soname' => 'libdakota-core.${so_ext}', # cmd-line
    'install' => {
      '-rules' => [
      ],
      'files' => [ # install.files
        '${INSTALL_PREFIX}/lib/dakota/compiler-command-line-clang.json',
        '${INSTALL_PREFIX}/lib/dakota/compiler-command-line-gcc.json',
        '${INSTALL_PREFIX}/lib/dakota/extra.json',
        '${INSTALL_PREFIX}/lib/dakota/platform-darwin.json',
        '${INSTALL_PREFIX}/lib/dakota/platform-linux.json',
        '${INSTALL_PREFIX}/lib/dakota/lang-user-data.json',
        '${INSTALL_PREFIX}/lib/dakota/used.json',

        '${INSTALL_PREFIX}/lib/dakota/dakota.pm',
        '${INSTALL_PREFIX}/lib/dakota/generate.pm',
        '${INSTALL_PREFIX}/lib/dakota/parse.pm',
        '${INSTALL_PREFIX}/lib/dakota/rewrite.pm',
        '${INSTALL_PREFIX}/lib/dakota/sst.pm',
        '${INSTALL_PREFIX}/lib/dakota/util.pm',

        '${INSTALL_PREFIX}/lib/libdakota-core.${so_ext}',

        '${INSTALL_PREFIX}/include/dakota.${h_ext}',
        '${INSTALL_PREFIX}/include/dakota-finally.${h_ext}',
        '${INSTALL_PREFIX}/include/dakota-log.${h_ext}',
        '${INSTALL_PREFIX}/include/dakota-object.inc',
        '${INSTALL_PREFIX}/include/dakota-object-defn.inc',
        '${INSTALL_PREFIX}/include/dakota-of.inc',
        '${INSTALL_PREFIX}/include/dakota-os.${h_ext}',
        '${INSTALL_PREFIX}/include/dakota-weak-object.inc',
        '${INSTALL_PREFIX}/include/dakota-weak-object-defn.inc',
        '${INSTALL_PREFIX}/include/dakota-other.inc',

        '${INSTALL_PREFIX}/bin/dakota',
        '${INSTALL_PREFIX}/bin/dakota-fixup-stderr',
        '${INSTALL_PREFIX}/bin/dakota-build',
        '${INSTALL_PREFIX}/bin/dakota-build2cmake',
        '${INSTALL_PREFIX}/bin/dakota-build2mk',
        '${INSTALL_PREFIX}/bin/dakota-build2project',
      ],
      '-home' => [ # install.home
        '${SOURCE_DIR}/home/.dakota/.bashrc',
        '${SOURCE_DIR}/home/.dakota/.gdbinit',
        '${SOURCE_DIR}/home/.dakota/emacs/dakota-mode.el',
        '${SOURCE_DIR}/home/.dakota/emacs/init.el',
      ],
    }
}
