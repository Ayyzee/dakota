// -*- mode: dakota; c-basic-offset: 2; tab-width: 2; indent-tabs-mode: nil -*-

// Copyright (C) 2007 - 2015 Robert Nielsen <robert@dakota.org>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

# include <cassert>

module dakota-core;

klass output-stream;

klass no-such-slot-exception {
  superklass exception;

  slots {
    object-t     object;
    symbol-t     name;
    signature-t* signature;
  }
  method init(object-t     self,
              object-t     object :,
              symbol-t     name :,
              signature-t* signature :,
              str-t        src-file : nullptr,
              int-t        src-line : 0) -> object-t {
    self = $init(super, #src-file : src-file, #src-line : src-line);
    self.object = object;
    self.name = name;
    self.signature = signature;
    return self;
  }
  method print(object-t self, object-t out) -> object-t {
    if (nullptr == out || null == out)
      out = std-error;
    $print(super, out);

    if ($instance?(self.object, klass::_klass_)) {
      $print-format(out,
                    ", \"instance\": \"%s\""
                    ", \"klass\": \"%s\""
                    ", \"method\": \"%s(%s)\""
                    ", \"slot-name\": \"#%s\"",
                    name-of(self.object),
                    name-of(klass-of(self.object)),
                    self.signature->name, self.signature->param-types,
                    self.name);
    } else {
      $print-format(out,
                    ", \"instance\": \"%s\""
                    ", \"klass\": \"%s\""
                    ", \"method\": \"%s(%s)\""
                    ", \"slot-name\": \"#%s\"",
                    $str(self.object),
                    name-of(klass-of(self.object)),
                    self.signature->name, self.signature->param-types,
                    self.name);
    }
    return self;
  }
}
