// -*- mode: Dakota; c-basic-offset: 2; tab-width: 2; indent-tabs-mode: nil -*-

// Copyright (C) 2007 - 2015 Robert Nielsen <robert@dakota.org>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

module dakota;

# include <cassert>
# include <cstring>

klass ascii-number;
klass named-info;

static object-t gbl-base2-ascii-number-kls-info;

klass ascii-number-klass {
  superklass klass;

  slots {
    str-t digits;
  }
  method init(object-t self,
                       object-t       info :   gbl-base2-ascii-number-kls-info,
                       str-t digits : "01") -> object-t {
    self = $init(super, #info : info);
    assert(nullptr != digits);
    self.digits = digits;
    // should confirm the digits are unique
    return self;
  }
  method digits(object-t self) -> str-t {
    str-t digits = self.digits;
    return digits;
  }
  klass initialize(object-t) -> void {
    gbl-base2-ascii-number-kls-info = dk-make-named-info(#base2-ascii-number-klass,
                                                         #superklass-name, cast(intptr-t)#ascii-number,
                                                         nullptr);
    return;
  }
  klass finalize(object-t) -> void {
    return;
  }
}
