// -*- mode: dakota; c-basic-offset: 2; tab-width: 2; indent-tabs-mode: nil -*-

// Copyright (C) 2007 - 2017 Robert Nielsen <robert@dakota.org>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

# include <cassert>
# include <cstring>

module dakota;

klass ascii-number;
klass named-info;

klass ascii-number-klass {
  superklass klass;

  slots {
    str-t digits;
  }
  method init(object-t self,
              symbol-t name:    #base2-ascii-number-klass,
              str-t    digits: "01") -> object-t {
    self = $init(super, #name: name);
    assert(digits != nullptr);
    self.digits = digits;
    // should confirm the digits are unique
    return self;
  }
  method digits(object-t self) -> str-t {
    str-t digits = self.digits;
    return digits;
  }
  klass func initialize(object-t) -> void {
    named-info-t* info = dk-make-named-info(#base2-ascii-number-klass,
                                            #superklass-name, cast(intptr-t)#ascii-number,
                                            nullptr);
    dk-register-klass(info);
    return;
  }
}
