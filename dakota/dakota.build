# -*- mode: perl -*-
{
    'builddir' => 'build-dkt',
    'warn-opts-file' => '../warn.opts',
    'srcs' => [ # cmd-line
      'ascii-number-klass.dk',
      'ascii-number.dk',
      'dakota.dk',
      'dimension.dk',
      'float.dk',
      'hashed-counted-set.dk',
      'hashed-set.dk',
      'hashed-table.dk',
      'input-file.dk',
      'json-object-output-stream.dk',
      'json-parser.dk',
      'lexer.dk',
      'open-token.dk',
      'output-file.dk',
      'point.dk',
      'rect.dk',
      'slot-info.dk',
      'str-buffer.dk',
      'syntax-exception.dk',
      'text-output-stream.dk',
      'token.dk',
      'tokenid.dk',
      'type-func.dk',
      'xml-object-output-stream.dk',
    ],
    'lib-dirs' => [ # cmd-line
      '${INSTALL_PREFIX}/lib',
    ],
    'libs' => [ # cmd-line
      'dakota-dso',
      'dakota-core',
    ],
    'include-dirs' => [ # cmd-line
      '${SOURCE_DIR}/../include',
      '${INSTALL_PREFIX}/include',
    ],
    'macros' => [ # cmd-line
      #'DK_SRC_UNIQUE_HEADER=0',
      #'DK_INLINE_GENERIC_FUNCS=0',
      #'DK_INLINE_KLASS_FUNCS=0',
    ],
    'target' => 'dakota', # cmd-line
    'is-lib' => 1,
    'compatibility-version' => '1.0.0',                      # cmd-line
    'current-version' =>       '1.0.0',                      # cmd-line
    'soname' => 'libdakota.${so_ext}', # cmd-line
    'install' => {
      '-rules' => [
      ],
      'files' => [ # install.files
        '${INSTALL_PREFIX}/lib/libdakota.${so_ext}',
      ],
    }
}
