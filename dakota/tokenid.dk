// -*- mode: dakota; c-basic-offset: 2; tab-width: 2; indent-tabs-mode: nil -*-

// Copyright (C) 2007 - 2015 Robert Nielsen <robert@dakota.org>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

# include <cassert>

module dakota;

klass tokenid {
  slots ssize-t;

  method init(object-t self, slots-t slots: 0) -> object-t {
    self = $init(super);
    mutable-unbox(self) = slots;
    return self;
  }
  method str(slots-t s, char-t* str, ssize-t len) -> str-t {
    //# if LITTLE-ENDIAN
    if (128 > s) {
      assert(1 <= len);
      str[0] = cast(char-t)s;
      if (1 + (1) <= len)
        str[1] = NUL;
    } else {
      assert(4 <= len);
      str[0] = cast(char-t)((s >> 24) & 0x000000ff);
      str[1] = cast(char-t)((s >> 16) & 0x000000ff);
      str[2] = cast(char-t)((s >>  8) & 0x000000ff);
      str[3] = cast(char-t)((s >>  0) & 0x000000ff);
      if (4 + (1) <= len)
        str[4] = NUL;
    }
    //# else
    //# endif
    return str;
  }
}
