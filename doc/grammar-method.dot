// Copyright (C) 2007, 2008, 2009 Robert Nielsen <robert@dakota.org>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// method alias(fred) object-t foo(object-t self,
//                                 int32-t  fa1);

// method alias(va:fred) object-t va:foo(object-t  self,
//                                       object-t  fa1,
//                                       va-list-t args);

// method object-t foo(object-t self,
//                     int32-t  fa1, 
//                     object-t ka1 : {},
//                     int32-t  ka2 : {0});

// other method decorators: format-printf(), format-scanf(), format-va-printf(), format-va-scanf()

digraph "grammar-method"
{
  graph [ label = "\G", fontcolor = red ];
  graph [ rankdir = LR, center = true ];
  graph [ page = "8.5,11", size = "7.5,10" ];
//   graph [ concentrate = true ];
  node [ shape = circle ];

  "method" [ shape = doublecircle, fontcolor = blue ];

  node [ label = "", width = 0.25 ];

  "999" [ shape = doublecircle ];

  "method" -> 000 [ label = "method" ];
  000 -> 010 [ label = "alias" ];
  010 -> 020 [ label = "(" ];
  020 -> 030 [ label = "qual-ident", fontcolor = blue ];
  030 -> 040 [ label = ")" ];
  040 -> 050 [ label = "type", fontcolor = blue ];
  000 -> 050 [ label = "type", fontcolor = blue ];
  050 -> 060 [ label = "qual-ident", fontcolor = blue ];
  060 -> 070 [ label = "(" ];
  070 -> 080 [ label = "object-t" ];
  080 -> 090 [ label = "self" ];

  090 -> 100 [ label = "," ];
  090 -> 150 [ label = ")" ];
  100 -> 110 [ label = "type", fontcolor = blue ];
  110 -> 120 [ label = "ident", fontcolor = blue ];

  120 -> 130 [ label = ":" ];
  130 -> 140 [ label = "expr", fontcolor = blue ];
  140 -> 150 [ label = ")" ];

  150 -> 999 [ label = ";" ];
  150 -> 999 [ label = "{" ];

  100 -> 110 [ label = ",", dir = back, color = green ];
  100 -> 120 [ label = ",", dir = back, color = green ];
  100 -> 140 [ label = ",", dir = back, color = green ];

  110 -> 150 [ label = ")" ];
  120 -> 150 [ label = ")" ];
}
