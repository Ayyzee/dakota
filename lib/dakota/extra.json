# -*- mode: cperl -*-
# -*- cperl-close-paren-offset: -2 -*-
# -*- cperl-continued-statement-offset: 2 -*-
# -*- cperl-indent-level: 2 -*-
# -*- cperl-indent-parens-as-block: t -*-
# -*- cperl-tab-always-indent: t -*-
{
 #'target_extra_generics' => {},
  'src_extra_generics' => {
    'alloc' => undef,
    'backward-iterator' => undef,
    'backward-iterator-context' => undef,
    'dealloc' => undef,
    'forward-iterator' => undef,
    'forward-iterator-context' => undef,
    'has-trait?' => undef,
    'init' => undef,
    'instance-of?' => undef,
    'iterator' => undef,
    'iterator-context' => undef,
    'klass-with-trait' => undef,
    'next' => undef,
  },
  'src_extra_keywords' => {
    '#keyword' => undef,       # kw-args processing funcs (throw)
    '#object' => undef,        # kw-args processing funcs (throw)
    '#objects' => undef,         # implied when using some literal constructs
    '#signature' => undef,     # kw-args processing funcs (throw)
    '#slots!' => undef,
    '#slots' => undef,
    '#slots?' => undef,
    '#src-file' => undef,
    '#src-line' => undef,
  },
  'target_extra_keywords' => {
    '#message' => undef,
    '#symbol' => undef,
  },
  'src_extra_klass_decls' => {
    'boole' => undef,
    'char8' => undef,
    'compare' => undef, # hackhack
    'equals' => undef, # hackhack (workaround for dakota-test/should-pass/pass/sets/)
    'finalize-func' => undef,
    'generic-func' => undef,
    'hash' => undef,
    'initialize-func' => undef,
    'input-stream' => undef, # std-input
    'iterator-context' => undef,
    'keyword' => undef,
    'klass' => undef,
    'method' => undef,
    'methods' => undef,
    'missing-keyword-exception' => undef, # kw-args processing funcs (throw)
    'named-info' => undef,
    'no-such-keyword-exception' => undef, # kw-args processing funcs (throw)
    'object' => undef,
    'output-stream' => undef, # std-output, std-error
    'ptr' => undef,
    'property' => undef,
    'selector' => undef,
    'signature' => undef,
    'size' => undef,
    'ssize' => undef,
    'symbol' => undef,
    'super' => undef,
    'str' => undef,
    'stream' => undef,
    'throw-src' => undef,
    'uchar8' => undef,
    'uintptr' => undef,
  },
  'target_extra_klass_decls' => {
    'assoc-node' => undef,
    'method-alias' => undef,
    'no-such-method-exception' => undef, # generic funcs (throw)
    'selector-node' => undef,
    'var-args-method' => undef,
  },
  'src_extra_symbols' => {
  },
  'target_extra_symbols' => {
    '#bool-t' => undef, # hardcode typealias
    '#cat' => undef,
    '#char-t' => undef, # hardcode typealias
    '#dir' => undef,
    '#item' => undef,
    '#enum' => undef,
    '#enum-base' => undef,
    '#exe' => undef,
    '#executable' => undef,
    '#exported-method-addresses' => undef,
    '#exported-method-signatures' => undef,
    '#exported-slots-method-addresses' => undef,
    '#exported-slots-method-signatures' => undef,
    '#exports' => undef,
    '#expr' => undef,
    '#expr-str' => undef,
    '#file' => undef,
    '#generic-func-ptrs' => undef,
    '#get-segment-data' => undef,
    '#has-exported-behavior' => undef,
    '#has-exported-state' => undef,
    '#imported-klass-names' => undef,
    '#imported-klass-ptrs' => undef,
    '#include-fors' => undef,
    '#int-literals' => undef,
    '#int-names' => undef,
    '#int-ptrs' => undef,
    '#int-t' => undef,
    '#uint-t' => undef,
    '#interpose-name' => undef,
    '#interposers' => undef,
    '#ints' => undef,
    '#is-exported' => undef,
    '#key' => undef,
    '#klass' => undef,
    '#klass-defns' => undef,
    '#klass-name' => undef,
    '#kw-args-method-signatures' => undef,
    '#lib' => undef,
    '#library' => undef,
    '#method' => undef,
    '#method-addresses' => undef,
    '#method-aliases' => undef,
    '#method-signatures' => undef,
    '#module' => undef,
    '#name' => undef,
    '#node' => undef,
    '#offset' => undef,
    '#requires' => undef,
    '#schar-t' => undef, # hardcode typealias
    '#selectors' => undef,
    '#signatures' => undef,
    '#size' => undef,
    '#slots-info' => undef,
    '#slots-type' => undef,
    '#slots-typeid' => undef,
    '#str-literals' => undef,
    '#str-names' => undef,
    '#str-ptrs' => undef,
    '#struct' => undef,
    '#superklass-name' => undef,
    '#trait' => undef,
    '#traits' => undef,
    '#type' => undef,
    '#type-enum' => undef,
    '#typeid' => undef,
    '#uchar-t' => undef, # hardcode typealias
    '#int-t' => undef,
    '#uint-t' => undef,
    '#union' => undef,
    '#va-generic-func-ptrs' => undef,
    '#va-method' => undef,
    '#va-method-signatures' => undef,
    '#va-selectors' => undef,
    '#va-signatures' => undef,
    '#var-args-method-addresses' => undef,
  }
}
