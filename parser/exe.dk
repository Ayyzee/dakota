// -*- mode: C++; c-basic-offset: 2; tab-width: 2; indent-tabs-mode: nil -*-

// Copyright (C) 2007, 2008, 2009 Robert Nielsen <robert@dakota.org>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

klass syntax-tree;
klass collection;

int-t main(int argc, char** argv)
{
  uint32-t token-count = 0;
  
  for (uint32-t i = 1; NULL != argv[i]; i++)
  {
    fprintf(stderr, "#file=%s\n", argv[i]);
    try
    {
      object-t st = make(syntax-tree:klass, filename => argv[i]);
      token-count += dk:size(st);
      object-t file-repos = dk:intro(st);
    //fprintf(stdout, "\n");
      dk:writeln-lite(file-repos, std-output);
      USE(file-repos);
    }
    catch (syntax-exception:klass e)
    {
      dk:print-shallow(e, std-error);
      exit(EXIT-FAILURE);
    }
//     dk:dump(st);
  }
  fprintf(stderr, "#token-count=%i\n", token-count);
//   fprintf(stderr, "advance-count=%i\n", advance-count);
  return 0;
}
