// -*- mode: Dakota; c-basic-offset: 2; tab-width: 2; indent-tabs-mode: nil -*-

// Copyright (C) 2007 - 2015 Robert Nielsen <robert@dakota.org>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

module dakota;

#include <cstdbool>

klass boole-klass {
  superklass klass;

  slots object-t[2];
}
// its George Boole (not George Bool)
klass boole { // a doubleton :-)
  superklass number;
  klass      boole-klass;

  slots bool-t;

  object-t initialize(object-t kls) {
    *boole-klass::unbox(kls)[0] = make(boole::klass, #slots : false);
    *boole-klass::unbox(kls)[1] = make(boole::klass, #slots : true);
    return kls;
  }
  method object-t init(object-t self, slots-t slots : false) {
    self = $init(super); // self = super.$init();
    *unbox(self) = slots;
    self = *boole-klass::unbox(klass-of(self))[slots]; // intentionally throwing away self
    return self;
  }
}
static-assert(0 == false, "Boolean false must equal 0");
static-assert(1 == true,  "Boolean true must equal 1");
