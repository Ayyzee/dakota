// -*- mode: Dakota; c-basic-offset: 2; tab-width: 2; indent-tabs-mode: nil -*-

// Copyright (C) 2007 - 2015 Robert Nielsen <robert@dakota.org>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

module dakota-util;

klass float32 {
  superklass number;
  
  slots float32-t;

  method init(object-t self, slots-t slots : 0.0) -> object-t {
    self = $init(super);
    *unbox(self) = slots;
    return self;
  }
}
klass float64 {
  superklass number;
  
  slots float64-t;

  method init(object-t self, slots-t slots : 0.0) -> object-t {
    self = $init(super);
    *unbox(self) = slots;
    return self;
  }
}
klass float128 {
  superklass number;
  
  slots float128-t;

  method init(object-t self, slots-t slots : 0.0) -> object-t {
    self = $init(super);
    *unbox(self) = slots;
    return self;
  }
}
static-assert(32/8  == sizeof(float32-t),  "The slots type of klass float32  must be  4 bytes in size");
static-assert(64/8  == sizeof(float64-t),  "The slots type of klass float64  must be  8 bytes in size");
static-assert(128/8 == sizeof(float128-t), "The slots type of klass float128 must be 16 bytes in size");
