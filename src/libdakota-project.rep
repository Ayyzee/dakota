# -*- mode: cperl -*-
# -*- cperl-close-paren-offset: -2 -*-
# -*- cperl-continued-statement-offset: 2 -*-
# -*- cperl-indent-level: 2 -*-
# -*- cperl-indent-parens-as-block: t -*-
# -*- cperl-tab-always-indent: t -*-

{
  'srcs' => [ # cmd-line
    '$(srcdir)/autorelease-pool.dk',
    '$(srcdir)/bit-vector.dk',
    '$(srcdir)/boole.dk',
    '$(srcdir)/char16.dk',
    '$(srcdir)/char32.dk',
    '$(srcdir)/char8.dk',
    '$(srcdir)/collection.dk',
    '$(srcdir)/const-info.dk',
    '$(srcdir)/construct.dk',
    '$(srcdir)/counted-set.dk',
    '$(srcdir)/dakota.dk',
    '$(srcdir)/deque.dk',
    '$(srcdir)/dl.dk',
    '$(srcdir)/enum-info.dk',
    '$(srcdir)/equal-predicate.dk',
    '$(srcdir)/exception.dk',
    '$(srcdir)/file.dk',
    '$(srcdir)/forward-iterator.dk',
    '$(srcdir)/input-stream.dk',
    '$(srcdir)/keyword-exception.dk',
    '$(srcdir)/keyword.dk',
    '$(srcdir)/klass.dk',
    '$(srcdir)/method-alias.dk',
    '$(srcdir)/method.dk',
    '$(srcdir)/missing-keyword-exception.dk',
    '$(srcdir)/module-dakota.dk',
    '$(srcdir)/named-enum-info.dk',
    '$(srcdir)/named-info.dk',
    '$(srcdir)/no-such-keyword-exception.dk',
    '$(srcdir)/no-such-method-exception.dk',
    '$(srcdir)/object-input-stream.dk',
    '$(srcdir)/object-output-stream.dk',
    '$(srcdir)/object.dk',
    '$(srcdir)/output-stream.dk',
    '$(srcdir)/pair.dk',
    '$(srcdir)/property.dk',
    '$(srcdir)/ptr.dk',
    '$(srcdir)/result.dk',
    '$(srcdir)/safe-str.dk',
    '$(srcdir)/selector-node.dk',
    '$(srcdir)/selector.dk',
    '$(srcdir)/sequence.dk',
    '$(srcdir)/set.dk',
    '$(srcdir)/signature.dk',
    '$(srcdir)/singleton-klass.dk',
    '$(srcdir)/size.dk',
    '$(srcdir)/sorted-array.dk',
    '$(srcdir)/sorted-counted-set.dk',
    '$(srcdir)/sorted-ptr-array.dk',
    '$(srcdir)/sorted-set.dk',
    '$(srcdir)/sorted-table.dk',
    '$(srcdir)/stack.dk',
    '$(srcdir)/std-compare.dk',
    '$(srcdir)/stdint.dk',
    '$(srcdir)/str.dk',
    '$(srcdir)/str128.dk',
    '$(srcdir)/str256.dk',
    '$(srcdir)/str32.dk',
    '$(srcdir)/str512.dk',
    '$(srcdir)/str64.dk',
    '$(srcdir)/strerror-name.dk',
    '$(srcdir)/string.dk',
    '$(srcdir)/super.dk',
    '$(srcdir)/symbol.dk',
    '$(srcdir)/system-exception.dk',
    '$(srcdir)/table.dk',
    '$(srcdir)/trace.dk',
    '$(srcdir)/vector.dk',
  ],
  'libs' => [ # cmd-line
    '/usr/lib/libdl.$(so_ext)',
  ],
  'include-dirs' => [ # cmd-line
    '$(srcdir)',
    '$(srcdir)/../include',
  ],
  'macros' => [ # cmd-line
    'DKT_WORKAROUND',
    'HAVE_CONFIG_HH',
    'MOD_SIZE_CAST_HACK',
  ],
  'output' => '$(blddir)/../lib/libdakota.$(so_ext)', # cmd-line
  'compatibility-version' => '1.0.0', # cmd-line
  'current-version' =>       '1.0.0', # cmd-line
  'soname' => '$(blddir)/../lib/libdakota.$(so_ext)', # cmd-line
  'install' => {
    '-rules' => [
      '$(DESTDIR)$(prefix)/%', '$(srcdir)/../%',
      '$(DESTDIR)$(prefix)/%', '$(blddir)/../%',
    ],
    'libs' => [ # install.libs
      '$(DESTDIR)$(prefix)/lib/dakota/compiler-darwin-clang.json',
      '$(DESTDIR)$(prefix)/lib/dakota/compiler-darwin-gcc.json',
      '$(DESTDIR)$(prefix)/lib/dakota/compiler-linux-clang.json',
      '$(DESTDIR)$(prefix)/lib/dakota/compiler-linux-gcc.json',
      '$(DESTDIR)$(prefix)/lib/dakota/extra.json',
      '$(DESTDIR)$(prefix)/lib/dakota/header-from-symbol.json',
      '$(DESTDIR)$(prefix)/lib/dakota/used.json',

      '$(DESTDIR)$(prefix)/lib/dakota/macros.pl',

      '$(DESTDIR)$(prefix)/lib/dakota/dakota.pm',
      '$(DESTDIR)$(prefix)/lib/dakota/generate.pm',
      '$(DESTDIR)$(prefix)/lib/dakota/macro_system.pm',
      '$(DESTDIR)$(prefix)/lib/dakota/parse.pm',
      '$(DESTDIR)$(prefix)/lib/dakota/rewrite.pm',
      '$(DESTDIR)$(prefix)/lib/dakota/sst.pm',
      '$(DESTDIR)$(prefix)/lib/dakota/util.pm',

      '$(DESTDIR)$(prefix)/lib/libdakota.$(so_ext)',
    ],
    'includes' => [ # install.includes
      '$(DESTDIR)$(prefix)/include/dakota-finally.hh',
      '$(DESTDIR)$(prefix)/include/dakota-log.hh',
      '$(DESTDIR)$(prefix)/include/dakota.hh',
    ],
    'bins' => [ # install.bins
      '$(DESTDIR)$(prefix)/bin/dakota',
      '$(DESTDIR)$(prefix)/bin/dakota-fixup-stderr.pl',
      '$(DESTDIR)$(prefix)/bin/dakota-project',
    ],
    'home' => [ # install.home
      '$(srcdir)/home/.dakota/.bashrc',
      '$(srcdir)/home/.dakota/.gdbinit',
      '$(srcdir)/home/.dakota/emacs/dakota-mode.el',
      '$(srcdir)/home/.dakota/emacs/init.el',
    ],
  }
}
