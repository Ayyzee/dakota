// -*- mode: C++; c-basic-offset: 2; tab-width: 2; indent-tabs-mode: nil -*-

// Copyright (C) 2007, 2008, 2009 Robert Nielsen <robert@dakota.org>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

include <cstdlib>;
include <cstring>;

module dakota;

extern "C"
{
  export int-t safe-strcmp(const char8-t* s1, const char8-t* s2)
  {
    int-t value = 0;

    if (NULL == s1 || NULL == s2)
    {
      if (NULL == s1 && NULL == s2)
        value = 0;
      else-if (NULL == s1)
        value = -1;
      else-if (NULL == s2)
        value = 1;
    }
    else
    {
      value = strcmp(s1, s2);
    }
    return value;
  }

  export int-t safe-strptrcmp(const char8-t* const* sp1, const char8-t* const* sp2)
  {
    const char8-t* s1;
    if (NULL == sp1)
      s1 = NULL;
    else
      s1 = *sp1;
    const char8-t* s2;
    if (NULL == sp2)
      s2 = NULL;
    else
      s2 = *sp2;
    return safe-strcmp(s1, s2);
  }

  export int-t safe-strncmp(const char8-t* s1, const char8-t* s2, size-t n)
  {
    int-t value = 0;

    if (NULL == s1 || NULL == s2)
    {
      if (NULL == s1 && NULL == s2)
        value = 0;
      else-if (NULL == s1)
        value = -1;
      else-if (NULL == s2)
        value = 1;
    }
    else
    {
      value = strncmp(s1, s2, n);
    }
    return value;
  }

  export size-t safe-strlen(const char8-t* str)
  {
    size-t len;

    if (NULL == str)
      len = 0;
    else
      len = strlen(str);
    return len;
  }
} // extern "C"
