// -*- mode: Dakota; c-basic-offset: 2; tab-width: 2; indent-tabs-mode: nil -*-

// Copyright (C) 2007 - 2015 Robert Nielsen <robert@dakota.org>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

module dakota;

# include <cassert>
# include <cerrno>
# include <cstring>

# include "dakota-private.hh"

klass output-stream;
klass str128;

klass system-exception {
  superklass exception;

  slots {
    int-t    errnum;
    str-t    name;
    str128-t strerror;
  }
  method init(object-t self,
              str-t    src-file :,
              int-t    src-line :,
              int-t    errnum :) -> object-t {
    self = $init(super, #src-file : src-file, #src-line : src-line);
    assert(0 != errnum);
    self.errnum = errnum;
    self.name = strerror-name(self.errnum);
    strerror-r(self.errnum, self.strerror, sizeof(self.strerror));
    return self;
  }
  method print(object-t self, object-t out) -> object-t {
    if (null == out)
      out = std-error;
    $print(super, out);
    $print-format(out, ": errno=%s (\"%s\")\n",
                    self.name, self.strerror);
    return self;
  }
}
