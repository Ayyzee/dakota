// -*- mode: Dakota; c-basic-offset: 2; tab-width: 2; indent-tabs-mode: nil -*-

// Copyright (C) 2007 - 2015 Robert Nielsen <robert@dakota.org>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

module dakota-util;

int-t main()
{
  object-t o = make(hashed-table:klass);
  dk:dump(o);
  dk:println(o, std-output);
  printf("klass=%s\n", dk:utf8-from(dk:klass(o)));
  printf("superklass=%s\n", dk:utf8-from(dk:superklass(dk:klass(o))));
  dk:dump(dk:superklass(dk:klass(o)));
  char8-t buf[1024] = "";
  #if defined DEBUG
  printf("klass-chain=%s\n", dkt-get-klass-chain(dk:klass(o), buf, sizeof(buf)));
  #endif

  if (null) {
    #if defined DEBUG
    printf("klass-chain=%s\n", dkt-get-klass-chain(dk:klass(null), buf, sizeof(buf)));
    #endif
    object-t null-klass = null->klass;
    object-t second-null = make(null-klass);
    dk:dump(null);
    printf("---\n");
    dk:dump(second-null);
    printf("---\n");
    dk:dump(dk:klass(null));
    printf("---\n");
    dk:dump(dk:klass(second-null));
  }
  return 0;
}
