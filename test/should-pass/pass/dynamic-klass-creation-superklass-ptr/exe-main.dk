// -*- mode: Dakota; c-basic-offset: 2; tab-width: 2; indent-tabs-mode: nil -*-

// Copyright (C) 2007 - 2015 Robert Nielsen <robert@dakota.org>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#include <assert.h>

klass named-info;
klass property;

klass k1
{
}

int-t main()
{
  property-t k2-info-props[] =
  {
    { #name,            (uintptr-t)#k2 },
    { #exported?,       (uintptr-t)1   },
    { #superklass,      (uintptr-t)k1::klass },
//     { #superklass-name, (uintptr-t)#k1 },
  };
  named-info-t k2-info = { k2-info-props, DK-COUNTOF(k2-info-props), nullptr };

  int-t overwrite;
  setenv("DK_DUMP_CTLG", "", overwrite = 1);
  dkt-register-info(&k2-info);
  object-t k2-klass = dk-klass-for-name(#k2);
  dk::dump(k2-klass);

  return 0;
}
