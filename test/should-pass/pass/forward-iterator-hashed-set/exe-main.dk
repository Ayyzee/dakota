// -*- mode: Dakota; c-basic-offset: 2; tab-width: 2; indent-tabs-mode: nil -*-

#include <stdio.h>

klass hashed-set;
klass uint32;

typedef object-t (*add-t)(object-t, object-t);

static object-t create(object-t klass, add-t add, uint32-t len) {
  object-t c = make(klass);
  for (uint32-t i = 0; i < len; i++) {
    object-t e = uint32::box(i);
    fprintf(stderr, "%p\n", (void*)e);
    add(c, e);
  }
  fprintf(stderr, "==\n");
  return c;
}

int-t main() {
  object-t c = create(hashed-set::klass, $add, 3);
//   object-t c = create(deque::klass, $add-first, 1);
//   object-t json-object-output-stream = make(json-object-output-stream::klass);
//   $write(json-object-output-stream, c);

  if (1) {
    for (object-t iter = $forward-iterator(c);
         object-t e = $next(iter); ) {
      fprintf(stderr, "%p\n", (void*)e);
    }
    fprintf(stderr, "--\n");
  }

  if (1) {
    for (object-t iter = $forward-iterator(c);
         $next?(iter);
         $next(iter)) {
      object-t e = $element(iter);
      fprintf(stderr, "%p\n", (void*)e);
    }
    fprintf(stderr, "\n");
  }

  return 0;
}
