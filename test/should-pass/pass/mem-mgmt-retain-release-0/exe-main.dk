// -*- mode: Dakota; c-basic-offset: 2; tab-width: 2; indent-tabs-mode: nil -*-

klass k1
{
  method retain(object-t self) -> object-t {
    printf("%s:%s(%p)\n", __klass__, __method__, (void*)self);
    return $retain(super);
  }

  method release(object-t self) -> object-t {
    printf("%s:%s(%p)\n", __klass__, __method__, (void*)self);
    return $release(super);
  }

  method dealloc(object-t self) -> object-t {
    printf("%s:%s(%p)\n", __klass__, __method__, (void*)self);
    return $dealloc(super);
  }
}

int-t main() {
  object-t s = make(k1::klass);
  uint32-t c = 2;

  for (uint32-t i = 0; i < c; i++)
    $retain(s);
  printf("---\n");

  for (uint32-t i = 0; i < c + 1; i++)
    $release(s);

  return 0;
}
