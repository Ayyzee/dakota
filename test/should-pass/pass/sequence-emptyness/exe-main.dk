// -*- mode: Dakota; c-basic-offset: 2; tab-width: 2; indent-tabs-mode: nil -*-

#include <assert.h>

klass deque;

static void check(object-t klass)
{
//   object-t seq = make(klass);
//   for (uint32-t i = 0; i < 4; i++)
//   {
//     object-t o = make(object::klass);
//     $add-last(seq, o);
//     $test-dump(seq);
//   }

  object-t o1 = make(object::klass);
  object-t o2 = make(object::klass);
  object-t o3 = make(object::klass);
  object-t o4 = make(object::klass);
  object-t seq = make(klass);
  assert($empty?(seq));
  $test-dump(seq);
  $add-last(seq, o1);
  $test-dump(seq);
  $add-last(seq, o2);
  $test-dump(seq);
  $add-last(seq, o3);
  $test-dump(seq);
  $add-last(seq, o4);
  $test-dump(seq);
  assert(!$empty?(seq));
  object-t first = $remove-first(seq);
  $test-dump(seq);
  object-t second = $remove-first(seq);
  $test-dump(seq);
  object-t third = $remove-first(seq);
  $test-dump(seq);
  object-t fourth = $remove-first(seq);
  $test-dump(seq);
  assert(o1 == first);
  assert(o2 == second);
  assert(o3 == third);
  assert(o4 == fourth);
  assert($empty?(seq));
  return;
}

int-t main()
{
//   check(vector::klass);
  check(deque::klass);

  return 0;
}
