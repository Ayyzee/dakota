// -*- mode: Dakota; c-basic-offset: 2; tab-width: 2; indent-tabs-mode: nil -*-

# include <stdio.h>

klass test {
  method method-1(object-t self) -> object-t {
    printf("%s::%s()\n", __klass__, __method__->name);
    return self;
  }
  method method-2(object-t self) -> object-t {
    printf("%s::%s()\n", __klass__, __method__->name);
    return self;
  }
  method va::method-3(object-t self, va-list-t args) -> object-t {
    USE(args);
    printf("%s::%s()\n", __klass__, __method__->name);
    return self;
  }
}
int-t main() {
  $dump-methods(test::klass);
  method-t m = $method-for-selector(test::klass, SELECTOR(method-1(object-t)));
  USE(m);
//   va-method-t vm = $va-method-for-selector(test::klass, SELECTOR(va::method-3(object-t, va-list-t)));
  return 0;
}
