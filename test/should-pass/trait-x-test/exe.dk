// -*- mode: C++; c-basic-offset: 2; tab-width: 2; indent-tabs-mode: nil -*-

klass output-stream;

trait t1
{
  method object-t f1(object-t self)
	{
    symbol-t klass-name = dk:name(dk:klass(self));
    dk:print-format(std-output, "%s|%s:%s(%s)\n", klass-name, __klass__, __method__, __signature__->parameter-types);
    return self;
  }
}

trait t1
{
  method object-t f2(object-t self)
	{
    symbol-t klass-name = dk:name(dk:klass(self));
    dk:print-format(std-output, "%s|%s:%s(%s)\n", klass-name, __klass__, __method__, __signature__->parameter-types);
    return self;
  }
}

klass k1
{
  trait t1;
}

trait t2
{
  method object-t f2(object-t self)
	{
    symbol-t klass-name = dk:name(dk:klass(self));
    dk:print-format(std-output, "%s|%s:%s(%s)\n", klass-name, __klass__, __method__, __signature__->parameter-types);
    return self;
  }
}

trait t3
{
  method object-t f2(object-t self)
	{
    symbol-t klass-name = dk:name(dk:klass(self));
    dk:print-format(std-output, "%s|%s:%s(%s)\n", klass-name, __klass__, __method__, __signature__->parameter-types);
    return self;
  }
  method object-t f3(object-t self)
	{
    symbol-t klass-name = dk:name(dk:klass(self));
    dk:print-format(std-output, "%s|%s:%s(%s)\n", klass-name, __klass__, __method__, __signature__->parameter-types);
    return self;
  }
}

klass k2
{
  trait t2;
  trait t3;
}


klass k3
{
  trait t1;
  trait t2;
  trait t3;
}

int-t main()
{
  {
  object-t o = make(k1:klass);
  dk:f1(o);
  dk:f2(o);
  }

  {
  object-t o = make(k2:klass);
  dk:f2(o);
  }

  {
  object-t o = make(k3:klass);
  dk:f1(o);
  dk:f2(o);
  dk:f3(o);
  }

  return 0;
}
